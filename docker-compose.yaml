version: "3"

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "5000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - users-service
      - client-service
    networks:
      - mynetwork

  users-service:
    build:
      context: .
      args:
        - TARGET=users
    container_name: users-service
    ports:
      - "8080:8080"
    environment:
      MONGO_URI: "mongodb://mongo:27017/usersdb"
      NATS_URI: "nats://nats-streaming:4222"
      NATS_CLUSTER_ID: "test-cluster"
      NATS_CLIENT_ID: "users-service"
    depends_on:
      - postgres
      - nats-streaming
    networks:
      - mynetwork

  notifiaction-service:
    build:
      context: .
      args:
        - TARGET=notification
    container_name: notifiaction-service
    environment:
      NATS_URI: "nats://nats-streaming:4222"
      NATS_CLUSTER_ID: "test-cluster"
      NATS_CLIENT_ID: "notification-service"
    env_file:
      - .env
    depends_on:
      - nats-streaming
    networks:
      - mynetwork

  client-service:
    build:
      context: ./client
    container_name: client-service
    environment:
      XD: "123"
    depends_on:
      - nats-streaming
    networks:
      - mynetwork

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5440:5432"
    environment:
      POSTGRES_DB: productsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - mynetwork

  nats-streaming:
    image: "nats-streaming:latest"
    container_name: nats-streaming
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - mynetwork

networks:
  mynetwork:
